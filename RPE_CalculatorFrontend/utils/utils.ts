export function calculateValues(reps :number) {
    let values = <number[]>[];
  
    switch(reps) { 
        case 1: { 
           values = [1, 0.9775, 0.955, 0.9385, 0.922, 0.907, 0.892, 0.8775, 0.863, 0.85, 0.837, 0.824, 0.811];
           break; 
        } 
        case 2: { 
           values = [0.955, 0.9385, 0.922, 0.907, 0.892, 0.8775, 0.863, 0.85, 0.837, 0.824, 0.811, 0.7985, 0.786];
           break; 
        } 
        case 3: { 
           values = [0.922, 0.907, 0.892, 0.8775, 0.863, 0.85, 0.837, 0.824, 0.811, 0.7985, 0.786, 0.774, 0.762];
           break; 
        } 
        case 4: { 
            values = [0.892, 0.8775, 0.863, 0.85, 0.837, 0.824, 0.811, 0.7985, 0.786, 0.774, 0.762, 0.7505, 0.739];
            break; 
        } 
        case 5: { 
            values = [0.863, 0.85, 0.837, 0.824, 0.811, 0.7985, 0.786, 0.774, 0.762, 0.7505, 0.739, 0.723, 0.707];
            break; 
        } 
        case 6: { 
            values = [0.837, 0.824, 0.811, 0.7985, 0.786, 0.774, 0.762, 0.7505, 0.739, 0.723, 0.707, 0.6935, 0.68];
            break; 
        } 
        case 7: { 
            values = [0.811, 0.7985, 0.786, 0.774, 0.762, 0.7505, 0.739, 0.723, 0.707, 0.6935, 0.68, 0.6665, 0.653];
            break; 
        } 
        case 8: { 
            values = [0.786, 0.774, 0.762, 0.7505, 0.739, 0.723, 0.707, 0.6935, 0.68, 0.6665, 0.653, 0.6395, 0.626];
            break; 
        } 
        case 9: { 
            values = [0.762, 0.7505, 0.739, 0.723, 0.707, 0.6935, 0.68, 0.6665, 0.653, 0.6395, 0.626, 0.6125, 0.599];
            break; 
        } 
        case 10: { 
            values = [0.739, 0.723, 0.707, 0.6935, 0.68, 0.6665, 0.653, 0.6395, 0.626, 0.6125, 0.599, 0.5855, 0.572];
            break; 
        } 
        case 11: { 
            values = [0.707, 0.6935, 0.68, 0.6665, 0.653, 0.6395, 0.626, 0.6125, 0.599, 0.5855, 0.572, 0.5585, 0.545];
            break; 
        } 
        case 12: { 
            values = [0.68, 0.6665, 0.653, 0.6395, 0.626, 0.6125, 0.599, 0.5855, 0.572, 0.5585, 0.545, 0.5315, 0.518];
            break; 
        } 
        case 13: { 
            values = [0.653, 0.6395, 0.626, 0.6125, 0.599, 0.5855, 0.572, 0.5585, 0.545, 0.5315, 0.518, 0.5045, 0.491];
            break; 
        } 
        case 14: { 
            values = [0.626, 0.6125, 0.599, 0.5855, 0.572, 0.5585, 0.545, 0.5315, 0.518, 0.5045, 0.491, 0.4775, 0.464];
            break; 
        } 
        case 15: { 
            values = [0.599, 0.5855, 0.572, 0.5585, 0.545, 0.5315, 0.518, 0.5045, 0.491, 0.4775, 0.464, 0.4505, 0.437];
            break; 
        } 
     } 
  
    return values;
}

export function calculateIndex(rpe :string) {
    let number = 0;
  
    switch(rpe) { 
        case "10": { 
            number = 0;
            break; 
        } 
        case "9.5": { 
            number = 1;
            break; 
        } 
        case "9": { 
            number = 2;
            break; 
        } 
        case "8.5": { 
            number = 3;
            break; 
        } 
        case "8": { 
            number = 4;
            break; 
        } 
        case "7.5": { 
            number = 5;
            break; 
        } 
        case "7": { 
            number = 6;
            break; 
        } 
        case "6.5": { 
            number = 7;
            break; 
        } 
        case "6": { 
            number = 8;
            break; 
        } 
        case "5.5": { 
            number = 9;
            break; 
        } 
        case "5": { 
            number = 10;
            break; 
        } 
        case "4.5": { 
            number = 11;
            break; 
        } 
        case "4": { 
            number = 12;
            break; 
        } 
     } 
  
    return number;
}
